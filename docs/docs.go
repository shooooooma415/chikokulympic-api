// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/groups": {
            "post": {
                "description": "create a new group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "create group",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.PostGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v1.PostGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/groups/join": {
            "post": {
                "description": "join a chosen group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "join group",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.JoinGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.JoinGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/groups/{group_id}": {
            "get": {
                "description": "get chosen group info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "get group info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "group_id",
                        "name": "group_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.GroupInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/groups/{group_id}/leave": {
            "post": {
                "description": "leave a chosen group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "leave group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "group_id",
                        "name": "group_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.LeaveGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "put": {
                "description": "update user information(icon, name)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "update user",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/signin": {
            "post": {
                "description": "signin user from auth_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "signin user",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.SigninRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.SigninResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/signup": {
            "post": {
                "description": "subscribe user to the service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "subscribe user",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.SignupRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v1.SignupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{user_id}/groups": {
            "get": {
                "description": "get user groups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "get user groups",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/usecase.UserGroup"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/middleware.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "middleware.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "usecase.GroupResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "group123"
                },
                "is_creator": {
                    "type": "boolean",
                    "example": true
                },
                "member_count": {
                    "type": "integer",
                    "example": 5
                },
                "name": {
                    "type": "string",
                    "example": "テストグループ"
                }
            }
        },
        "usecase.Member": {
            "type": "object",
            "properties": {
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "usecase.UserGroup": {
            "type": "object",
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/usecase.GroupResponse"
                    }
                }
            }
        },
        "v1.GroupInfoResponse": {
            "type": "object",
            "required": [
                "group_members",
                "group_name",
                "manager_id",
                "password"
            ],
            "properties": {
                "group_members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/usecase.Member"
                    }
                },
                "group_name": {
                    "type": "string",
                    "example": "グループ名"
                },
                "manager_id": {
                    "type": "string",
                    "example": "user_id"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                }
            }
        },
        "v1.JoinGroupRequest": {
            "type": "object",
            "required": [
                "group_name",
                "password",
                "user_id"
            ],
            "properties": {
                "group_name": {
                    "type": "string",
                    "example": "group_name"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "user_id": {
                    "type": "string",
                    "example": "user_id"
                }
            }
        },
        "v1.JoinGroupResponse": {
            "type": "object",
            "properties": {
                "group_id": {
                    "type": "string",
                    "example": "group123"
                }
            }
        },
        "v1.LeaveGroupRequest": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "user_id": {
                    "type": "string",
                    "example": "user123"
                }
            }
        },
        "v1.PostGroupRequest": {
            "type": "object",
            "required": [
                "description",
                "group_name",
                "manager_id",
                "password"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "description"
                },
                "group_name": {
                    "type": "string",
                    "example": "group_name"
                },
                "manager_id": {
                    "type": "string",
                    "example": "user_id"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                }
            }
        },
        "v1.PostGroupResponse": {
            "type": "object",
            "properties": {
                "group_id": {
                    "type": "string",
                    "example": "group123"
                }
            }
        },
        "v1.SigninRequest": {
            "type": "object",
            "required": [
                "auth_id"
            ],
            "properties": {
                "auth_id": {
                    "type": "string",
                    "example": "auth_id"
                }
            }
        },
        "v1.SigninResponse": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string",
                    "example": "user123"
                }
            }
        },
        "v1.SignupRequest": {
            "type": "object",
            "required": [
                "auth_id",
                "token",
                "user_name"
            ],
            "properties": {
                "auth_id": {
                    "type": "string",
                    "example": "auth_id"
                },
                "token": {
                    "type": "string",
                    "example": "fcm_token"
                },
                "user_icon": {
                    "type": "string",
                    "example": "user_icon"
                },
                "user_name": {
                    "type": "string",
                    "example": "user_name"
                }
            }
        },
        "v1.SignupResponse": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string",
                    "example": "user123"
                }
            }
        },
        "v1.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "user_icon": {
                    "type": "string",
                    "example": "https://example.com/icon.png"
                },
                "user_name": {
                    "type": "string",
                    "example": "山田太郎"
                }
            }
        },
        "v1.UpdateUserResponse": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string",
                    "example": "user123"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Chikokulympic-API",
	Description:      "This is a Chikokulympic server API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
